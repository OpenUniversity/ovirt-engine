<?xml version="1.0" encoding="UTF-8"?>

<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.ovirt.engine.api</groupId>
    <artifactId>interface</artifactId>
    <version>4.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>restapi-definition</artifactId>
  <packaging>jar</packaging>

  <name>oVirt Engine API Definition</name>

  <dependencies>

    <dependency>
       <groupId>org.jboss.resteasy</groupId>
       <artifactId>resteasy-jaxrs</artifactId>
    </dependency>

    <dependency>
      <groupId>org.ovirt.engine.core</groupId>
      <artifactId>uutils</artifactId>
      <version>${engine.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ovirt.engine.core</groupId>
      <artifactId>common</artifactId>
      <version>${engine.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <!-- We need the sources of the model in order to analyze them and
         generate the XML schema: -->
    <dependency>
      <groupId>org.ovirt.api</groupId>
      <artifactId>model</artifactId>
      <version>1.0.0-SNAPSHOT</version>
      <type>jar</type>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>

    <plugins>

      <!-- Set properties pointing to the .jar files of the dependencies
           so that we can use a property to locate the model sources .jar
           file: -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Parse the model and generate the XML schema: -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>generate-schema</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.ovirt.api.metamodel.tool.Main</mainClass>
              <arguments>
                <argument>--model</argument>
                <argument>${org.ovirt.api:model:jar:sources}</argument>
                <argument>--in-schema</argument>
                <argument>${project.basedir}/src/main/schema/api.xsd</argument>
                <argument>--out-schema</argument>
                <argument>${project.basedir}/target/generated-schema/api.xsd</argument>
                <argument>--java</argument>
                <argument>${project.basedir}/target/generated-sources/model</argument>
                <argument>--jaxrs-package</argument>
                <argument>^services\.(.*)$=org.ovirt.engine.api.resource.$1</argument>
                <argument>--jaxrs-package</argument>
                <argument>org.ovirt.engine.api.resource</argument>
              </arguments>
              <includePluginDependencies>true</includePluginDependencies>
              <includeProjectDependencies>false</includeProjectDependencies>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.ovirt.api</groupId>
            <artifactId>metamodel-tool</artifactId>
            <version>1.0.0-SNAPSHOT</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Generate the Java code from the XML schema: -->
      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb22-plugin</artifactId>
        <version>0.8.1</version>
        <executions>
          <execution>
            <id>generate-java</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatePackage>org.ovirt.engine.api.model</generatePackage>
              <extension>true</extension>
              <schemaDirectory>${project.basedir}/target/generated-schema</schemaDirectory>
              <schemaIncludes>
                <include>*.xsd</include>
              </schemaIncludes>
              <bindingDirectory>${project.basedir}/src/main/schema</bindingDirectory>
              <bindingIncludes>
                <include>*.xjb</include>
              </bindingIncludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Generate the RSDL: -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-rsdl</id>
            <phase>compile</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.ovirt.engine.api.rsdl.RsdlManager</mainClass>
              <arguments>
                <argument>${application.baseuri}</argument>
                <argument>${project.build.outputDirectory}/rsdl.xml</argument>
                <argument>${project.build.outputDirectory}/rsdl_gluster.xml</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Run style checks: -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <!-- This is needed to avoid having to manually add the generated sources
           directory to the source paths in Eclipse: -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/xjc</source>
                <source>${project.build.directory}/generated-sources/model</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

    <resources>

      <!-- Include the regular resources directory and also the
           XML schema: -->
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.basedir}/target/generated-schema</directory>
      </resource>

    </resources>

  </build>

</project>
