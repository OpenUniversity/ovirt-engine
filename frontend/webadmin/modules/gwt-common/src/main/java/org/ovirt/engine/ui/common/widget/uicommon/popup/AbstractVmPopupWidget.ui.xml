<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder" xmlns:g="urn:import:com.google.gwt.user.client.ui"
             xmlns:w="urn:import:org.ovirt.engine.ui.common.widget"
             xmlns:d="urn:import:org.ovirt.engine.ui.common.widget.dialog"
             xmlns:e="urn:import:org.ovirt.engine.ui.common.widget.editor"
             xmlns:ge="urn:import:org.ovirt.engine.ui.common.widget.editor.generic"
             xmlns:t="urn:import:org.ovirt.engine.ui.common.widget.dialog.tab"
             xmlns:s="urn:import:org.ovirt.engine.ui.common.widget.uicommon.storage"
             xmlns:k="urn:import:org.ovirt.engine.ui.common.widget.form.key_value"
             xmlns:l="urn:import:org.ovirt.engine.ui.common.widget.label"
             xmlns:p="urn:import:org.ovirt.engine.ui.common.widget.profile"
             xmlns:vm="urn:import:org.ovirt.engine.ui.common.widget.uicommon.popup.vm"
             xmlns:ii="urn:import:org.ovirt.engine.ui.common.widget.uicommon.instanceimages"
             xmlns:b="urn:import:org.gwtbootstrap3.client.ui">

    <ui:with field='resources' type='org.ovirt.engine.ui.common.CommonApplicationResources' />
    <ui:with field='constants' type='org.ovirt.engine.ui.common.CommonApplicationConstants'/>

    <ui:style type="org.ovirt.engine.ui.common.widget.uicommon.popup.AbstractVmPopupWidget.Style">

      .sectionPanel {
        margin-bottom: 20px;
      }

      .sectionPanelTight {
        margin-bottom: 6px;
        float: left;
        width: 100%;
      }

      .sectionLabel {
        font-weight: bold;
        margin-top: 10px;
        margin-bottom: 5px;
      }

      .slimSectionLabel {
        font-weight: bold;
        margin-top: 2px;
        margin-bottom: 1px;
      }

      .sectionComment {
        margin-top: 10px;
        margin-left: 5px;
        font-style: italic;
      }

      .horizontallyAlignedCheckBox {
        float: left;
        padding-right: 15px;
      }

      .horizontallyAlignedCheckBoxContent {
      }

      .migrationDowntimePanel {
        padding-left: 1px;
        line-height: 30px;
      }

      .overrideMigrationDowntime {
        display: inline;
        float: left;
        width: 50px;
      }

      .overrideMigrationDowntime div {
        width: 20px;
        margin-top: 0;
      }

      .overrideMigrationDowntime>div {
          width: 50px;
      }

      .migrationDowntimeLabel {
        display: inline-block;
        float: left;
        max-width: 300px;
      }

      .migrationSelectInfoIcon {
          display: inline;
          float: left;
      }

      .migrationDowntimeInfoIcon {
        display: inline;
        float: left;
      }

      .migrationDowntime {
        display: inline;
        float: right;
        padding-right: 14px;
      }
      <!-- 			turns off the original styles -->

        .checkbox, .listbox div select {
            margin-left: -9px;
        }

        .checkboxWithLongLabel {
            width: 400px;
            float: left;
            clear: both;
        }

        .checkboxWithLongLabel label {
            margin-left: 26px;
            margin-top: -18px;
            display: block;
            line-height: 20px;
            width: 400px;
            float: left;
        }

        .longCheckboxContent {
            width: 90%;
        }

        .provisioningEditor {
            padding-right: 25px;
        }

        .provisioningEditorContent {
            display: none;
        }

        .provisioningRadioContent {
            padding-top: 3px;
            width: 100%;
        }

        .disksPanel {
            width: 560px;
            margin: 10px 0;
            display: inline-table;
        }

        .textBox {
            width: 30px;
            float: right;
        }

        .numOfVmsLabel {
            margin-left: 5px;
            color: #333333;
        }

        .prestartedHintLabel {
            font-size: 7pt;
            color: gray;
            text-align: right;
        }

        .radioButtonSpecificHost {
            margin-left: 10px;
        }

        .label {
            width: 350px;
        }

        .labelDisabled {
            color: gray;
        }

        .attachCdPanel {
            width: 100%;
        }

        .cdAttachedLabelWidth {
            width: 30px;
        }

        .hostRunMigrationOptions {
            margin-left: 6px;
        }

        .warningMessageLabel {
            color: #CD2127;
            position: absolute;
            bottom: 10px;
        }

        .cpuPinningStyle {
            float: left;
        }

        .expanderContent,.generalExpanderContent {
            padding-left: 10px;
        }

        .monitorsStyles {
            width: 40px;
            padding-left: 5px;
        }

        .monitorsStyles {
            width: 40px;
            padding-left: 5px;
        }

        .expanderContent {
            float: left;
        }

        .warningLabel {
            color: red;
            font-weight: bold;
            margin-left: 16px;
        }

        .poolEditVms {
            line-height: 30px;
            padding: 0 5px;
            padding-bottom: 35px;
        }

        .name {
            line-height: 30px;
        }

        .nameLabel {
            font-size: 13px;
            padding: 0 5px;
            font-family: Arial, sans-serif;
            line-height: 30px;
        }

        .prestartedVmsEditorContent, .maxAssignedVmsPerUserEditorContent {
            width: 228px;
        }

        .prestartedVmsEditor, .maxAssignedVmsPerUserEditor {
            float: right;
            width: 238px;
        }

        .nameEditorContent {
            float: right !important;
            width: 238px;
            padding-left: 5px;
            padding-right: 5px;
        }

        .editPrestartedVmsEditor, .editMaxAssignedVmsPerUserEditor {
            float: left;
            padding-right: 10px;
        }

        .infoIcon, .prestartedVmsIcon, .poolNameIcon, .maxAssignedVmsPerUserIcon {
            float: left;
            padding-top: 5px;
            padding-left: 2px;
        }

        .prestartedLabelWithHelp, .increasePrestartedLabel, .maxAssignedVmsPerUserLabel {
            float: left;
        }

        .editPrestartedVms, .editIncreaseVms, .editMaxAssignedVmsPerUser {
            float: right;
            width: 238px;
        }

        .prestartedLabel, .nameLabel {
            float: left;
            color: #333333;
        }

        .prestartedVmsInPoolVms, .increaseVmsInPoolVms, .maxAssignedVmsPerUserVms {
            float: left;
        }

        .migrationSelect {
            margin-right: 7px;
        }

        .generalTabExtendedRightWidgetWidth {
            /*  pfly_fix hack
            width: 250px !important;
            */
        }

        .generalTabExtendedRightWidgetWrapperWidth {
            width: 280px !important;
         }

        .headerPanel {
            padding-bottom: 6px;
        }

        .refreshButton {
            float: right;
            font-size: 12px;
            height: 14px;
            line-height: 14px;
            width: 12px;
            margin-right: 5px;
            padding: 2px;
            background: transparent;
            border: 1px solid transparent;
        }

        .cdImageEditor {
            width: 201px;
        }

        .isVirtioScsiEnabledEditor {
            width: 100%;
        }

        .monitorPanel {
            line-height: 30px;
            padding-bottom: 0;
            padding-left: 5px;
            padding-right: 5px;
            padding-top: 0;
            width: 230px;
            height: 30px;
        }

        .hostSelector {
            width: 504px;
        }

        .labelToCouple {
            line-height: 30px;
            text-align: left;
            float: left;
            width: 100%;
        }

        .labelToCoupleLabel {
            color: gray;
            font-family: Verdana, sans-serif;
            font-size: 13px;
            line-height: 30px;
            padding: 0 5px;
            float: left;
        }

        .labelToCoupleCouple {
            float: right;
            line-height: 30px;
            padding: 0 5px;
            width: 248px;
        }

        .labelToCoupleCoupleLeft {
            float: left;
        }

        .labelToCoupleCoupleRight {
            float: left;
        }

        .cpuSahresValueListBox, .cpuSahresValueTextBox {
            width: 110px;
        }

        .cpuPinningTextBox {
            width: 197px;
            padding-left: 5px;
        }

        .migrationSelectorInner {
            width: 260px;
        }

        .headerCol {
            float: left;
        }

        .floatLeft, .detachableCheckBox {
            float: left;
        }


        .detachableCheckBox {
            width: 400px;
        }

        .fullWidth {
            width: 100%;
        }

        .detachableStyle {
            display: inline-block;
        }
        .button {
            padding: 0 5px;
        }

        .migrationModeContentWidgetEditor, .overrideMigrationDowntimeContentEditor {
            float: left;
        }

        .migrationModeContentWidgetEditor {
            width: 300px;
        }

        .overrideMigrationDowntimeContentEditor {
            width: 20px;
        }

        .serialNumberPolicy {
          margin-top: 9px;
        }

        .totalVcpusStyle {
            width: 270px;
        }

    </ui:style>

    <t:DialogTabPanel width="100%" height="100%" ui:field="mainTabPanel">
        <t:header>
            <g:FlowPanel addStyleNames="{style.headerPanel}">
                <e:GroupedListModelListBoxEditor ui:field="dataCenterWithClusterEditor" label="{constants.hostClusterVmPopup}" />
                <e:ListModelTypeAheadListBoxEditor ui:field="quotaEditor" label="{constants.quotaVmPopup}" />
                <e:ListModelTypeAheadListBoxEditor ui:field="baseTemplateEditor" label="{constants.basedOnTemplateVmPopup}"/>
                <e:ListModelTypeAheadListBoxEditor ui:field="templateWithVersionEditor" label="{constants.template}" />
                <e:ListModelListBoxEditor ui:field="oSTypeEditor" label="{constants.osVmPopup}" />
                <ge:EntityModelDetachableWidgetWithLabel ui:field="detachableInstanceTypesEditor" label="{constants.instanceType}" />
                <e:ListModelListBoxEditor ui:field="vmTypeEditor" label="{constants.optimizedFor}" />
            </g:FlowPanel>
        </t:header>
        <t:tab>
            <t:DialogTab ui:field="generalTab" label="{constants.GeneralVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <g:FlowPanel addStyleNames="{style.name}">
                                <g:FlowPanel addStyleNames="{style.prestartedLabelWithHelp}">
                                    <g:Label ui:field="nameLabel" addStyleNames="{style.nameLabel}" text="{constants.nameVmPopup}" />
                                    <d:InfoIcon ui:field="poolNameIcon" addStyleNames="{style.poolNameIcon} avmpw_infoIcon_pfly_fix" />
                                </g:FlowPanel>
                                <ge:EntityModelTextBoxOnlyEditor ui:field="nameEditor" addStyleNames="avmpw_nameEditor_pfly_fix" contentWidgetContainerStyleName="{style.nameEditorContent}"/>
                            </g:FlowPanel>
                            <ge:StringEntityModelTextBoxEditor ui:field="templateVersionNameEditor" label="{constants.templateVersionName}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="vmIdEditor" label="{constants.vmIdPopup}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="descriptionEditor" label="{constants.descriptionVmPopup}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="commentEditor" label="{constants.commentLabel}" />

                            <!-- New VM Pool -->
                            <ge:EntityModelTextBoxEditor ui:field="numOfVmsEditor" label="{constants.numOfVmsPoolPopup}" />
                            <g:FlowPanel ui:field="newPoolEditVmsPanel" addStyleNames="{style.poolEditVms} avmpw_poolEditVms_pfly_fix">
                                <g:FlowPanel addStyleNames="{style.prestartedLabelWithHelp}">
                                    <g:Label ui:field="prestartedLabel" addStyleNames="{style.prestartedLabel}" text="{constants.prestartedPoolPopup}" />
                                    <d:InfoIcon ui:field="newPoolPrestartedVmsIcon" addStyleNames="{style.prestartedVmsIcon} avmpw_infoIcon_pfly_fix" />
                                </g:FlowPanel>
                                <ge:IntegerEntityModelTextBoxOnlyEditor ui:field="prestartedVmsEditor" addStyleNames="{style.prestartedVmsEditor}" contentWidgetContainerStyleName="{style.prestartedVmsEditorContent}" label="{constants.prestartedVms}" />
                            </g:FlowPanel>

                            <g:FlowPanel ui:field="newPoolEditMaxAssignedVmsPerUserPanel" addStyleNames="{style.poolEditVms} avmpw_poolEditVms_pfly_fix">
                                <g:FlowPanel addStyleNames="{style.maxAssignedVmsPerUserLabel}">
                                    <g:Label text="{constants.maxAssignedVmsPerUser}" addStyleNames="{style.maxAssignedVmsPerUserLabel}" />
                                    <d:InfoIcon ui:field="newPoolMaxAssignedVmsPerUserIcon" addStyleNames="{style.maxAssignedVmsPerUserIcon} avmpw_infoIcon_pfly_fix" />
                                </g:FlowPanel>
                                <ge:EntityModelTextBoxOnlyEditor ui:field="maxAssignedVmsPerUserEditor" addStyleNames="{style.maxAssignedVmsPerUserEditor}" contentWidgetContainerStyleName="{style.maxAssignedVmsPerUserEditorContent}" label="{constants.maxAssignedVmsPerUser}" />
                            </g:FlowPanel>

                            <!-- Edit VM Pool -->
                            <g:FlowPanel addStyleNames="{style.poolEditVms} avmpw_poolEditVms_pfly_fix" ui:field="editPoolEditVmsPanel">
                                <g:FlowPanel addStyleNames="{style.prestartedLabelWithHelp}">
                                    <g:Label ui:field="editPrestartedVmsLabel" addStyleNames="{style.prestartedLabel}" />
                                    <d:InfoIcon ui:field="editPoolPrestartedVmsIcon" addStyleNames="{style.prestartedVmsIcon} avmpw_infoIcon_pfly_fix" />
                                </g:FlowPanel>
                                <g:FlowPanel ui:field="editPrestartedVmsPanel" addStyleNames="{style.editPrestartedVms}" >
                                    <ge:IntegerEntityModelTextBoxOnlyEditor ui:field="editPrestartedVmsEditor" addStyleNames="{style.editPrestartedVmsEditor}" contentWidgetContainerStyleName="{style.textBox}" />
                                    <g:Label text="{constants.vms}" addStyleNames="{style.prestartedVmsInPoolVms}" />
                                </g:FlowPanel>
                            </g:FlowPanel>

                            <g:FlowPanel ui:field="editPoolIncraseNumOfVmsPanel" addStyleNames="{style.poolEditVms} avmpw_poolEditVms_pfly_fix">
                                <g:Label text="{constants.increaseNumberOfVMsInPoolBy}" addStyleNames="{style.increasePrestartedLabel}" />
                                <g:FlowPanel ui:field="editIncreaseVmsPanel" addStyleNames="{style.editIncreaseVms}">
                                    <ge:EntityModelTextBoxOnlyEditor ui:field="incraseNumOfVmsEditor" addStyleNames="{style.editPrestartedVmsEditor}" contentWidgetContainerStyleName="{style.textBox}" />
                                    <g:Label text="{constants.vms}" addStyleNames="{style.increaseVmsInPoolVms}" />
                                </g:FlowPanel>
                            </g:FlowPanel>

                            <g:FlowPanel ui:field="editPoolEditMaxAssignedVmsPerUserPanel" addStyleNames="{style.poolEditVms} avmpw_poolEditVms_pfly_fix">
                                <g:FlowPanel addStyleNames="{style.maxAssignedVmsPerUserLabel}">
                                    <g:Label text="{constants.maxAssignedVmsPerUser}" addStyleNames="{style.maxAssignedVmsPerUserLabel}" />
                                    <d:InfoIcon ui:field="editPoolMaxAssignedVmsPerUserIcon" addStyleNames="{style.maxAssignedVmsPerUserIcon} avmpw_infoIcon_pfly_fix" />
                                </g:FlowPanel>
                                <g:FlowPanel addStyleNames="{style.editMaxAssignedVmsPerUser}">
                                    <ge:EntityModelTextBoxOnlyEditor ui:field="editMaxAssignedVmsPerUserEditor" addStyleNames="{style.editMaxAssignedVmsPerUserEditor}" contentWidgetContainerStyleName="{style.textBox}" label="{constants.maxAssignedVmsPerUser}" />
                                    <g:Label text="{constants.vms}" addStyleNames="{style.maxAssignedVmsPerUserVms}" />
                                </g:FlowPanel>
                            </g:FlowPanel>
                        </g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <ge:EntityModelCheckBoxEditor ui:field="isStatelessEditor" contentWidgetContainerStyleName="{style.horizontallyAlignedCheckBoxContent}" addStyleNames="{style.horizontallyAlignedCheckBox}" label="{constants.statelessVmPopup}" />
                            <ge:EntityModelCheckBoxEditor ui:field="isRunAndPauseEditor" contentWidgetContainerStyleName="{style.horizontallyAlignedCheckBoxContent}" addStyleNames="{style.horizontallyAlignedCheckBox}" label="{constants.runAndPauseVmPopup}" />
                            <ge:EntityModelCheckBoxEditor ui:field="isDeleteProtectedEditor" contentWidgetContainerStyleName="{style.horizontallyAlignedCheckBoxContent}" addStyleNames="{style.horizontallyAlignedCheckBox}" label="{constants.deleteProtectionPopup}" />
                            <ge:EntityModelCheckBoxEditor ui:field="copyTemplatePermissionsEditor" contentWidgetContainerStyleName="{style.horizontallyAlignedCheckBoxContent}" addStyleNames="{style.horizontallyAlignedCheckBox}" label="{constants.copyTemplatePermissions}" />
                        </g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <ii:InstanceImagesEditor ui:field="instanceImagesEditor"/>
                        </g:FlowPanel>
                        <g:FlowPanel ui:field="logicalNetworksEditorPanel" addStyleNames="{style.sectionPanel}">
                            <p:ProfilesInstanceTypeEditor ui:field="profilesInstanceTypeEditor" />
                         </g:FlowPanel>
                        <g:Label ui:field="generalWarningMessage" addStyleNames="{style.warningMessageLabel}" />
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="systemTab" label="{constants.systemVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <ge:EntityModelDetachableWidgetWithLabel ui:field="detachableMemSizeEditor" label="{constants.memSizeVmPopup}"/>
                        <w:EntityModelDetachableWidgetWithInfo ui:field="totalvCPUsEditorWithInfoIcon" />
                        <ge:StringEntityModelTextBoxOnlyEditor ui:field="totalvCPUsEditor" label="{constants.numOfVCPUs}" />
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <d:AdvancedParametersExpander ui:field="vcpusAdvancedParameterExpander"/>
                            <g:FlowPanel ui:field="vcpusAdvancedParameterExpanderContent" addStyleNames="{style.generalExpanderContent}">
                                <ge:EntityModelDetachableWidgetWithLabel ui:field="numOfSocketsEditorWithDetachable" label="{constants.numOfSockets}" />
                                <ge:EntityModelDetachableWidgetWithLabel ui:field="corePerSocketEditorWithDetachable" label="{constants.coresPerSocket}" />
                                <ge:EntityModelDetachableWidgetWithLabel ui:field="threadsPerCoreEditorWithDetachable" label="{constants.threadsPerCore}" />
                                <e:ListModelTypeAheadChangeableListBoxEditor ui:field="emulatedMachine" label="{constants.emulatedMachineLabel}" />
                                <e:ListModelTypeAheadChangeableListBoxEditor ui:field="customCpu" label="{constants.cpuModelLabel}" />
                            </g:FlowPanel>
                        </g:FlowPanel>
                            <g:Label ui:field="generalLabel" addStyleNames="{style.sectionLabel}" text="{constants.initialRunGeneral}" />
                            <w:EntityModelWidgetWithInfo ui:field="timeZoneEditorWithInfo" />
                            <vm:SerialNumberPolicyWidget ui:field="serialNumberPolicyEditor" addStyleNames="{style.serialNumberPolicy}" />
                        </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="poolTab" label="{constants.poolVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <e:ListModelListBoxEditor ui:field="poolTypeEditor" label="{constants.poolTypeVmPopup}" />
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
               <t:DialogTab ui:field="initialRunTab" label="{constants.initialRunVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <ge:EntityModelCheckBoxEditor ui:field="vmInitEnabledEditor" label="{constants.cloudInitOrSysprep}"/>
                        <vm:VmPopupVmInitWidget ui:field="vmInitEditor" />
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="consoleTab" label="{constants.consoleVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <e:ListModelListBoxEditor ui:field="displayTypeEditor" label="{constants.videoType}" />
                        <e:ListModelListBoxEditor ui:field="graphicsTypeEditor" label="{constants.graphicsProtocol}" />
                        <e:ListModelListBoxEditor ui:field="vncKeyboardLayoutEditor" label="{constants.vncKeyboardLayoutVmPopup}" />
                        <e:ListModelListBoxEditor ui:field="usbSupportEditor" label="{constants.usbPolicyVmPopup}" />
                        <e:ListModelListBoxEditor ui:field="consoleDisconnectActionEditor" label="{constants.consoleDisconnectActionVmPopup}" />
                        <w:GenericWidgetWithLabel ui:field="monitors" label="{constants.monitors}">
                            <g:HorizontalPanel verticalAlignment="middle">
                                <e:ListModelListBoxEditor ui:field="numOfMonitorsEditor" addStyleNames="{style.monitorsStyles}" label="{constants.monitorsVmPopup}" />
                                <ge:EntityModelCheckBoxEditor ui:field="isSingleQxlEnabledEditor" addStyleNames="{style.checkbox}" label="{constants.singleQxlEnabled}" />
                            </g:HorizontalPanel>
                        </w:GenericWidgetWithLabel>

                        <ge:EntityModelCheckBoxEditor ui:field="isSmartcardEnabledEditor" addStyleNames="{style.floatLeft} avmpw_smartcard_pfly_fix" label="{constants.smartcardVmPopup}" />
                        <g:Label ui:field="nativeUsbWarningMessage" text="{constants.nativeUsbSupportWarning}" addStyleNames="{style.warningMessageLabel}" />

                        <g:Label ui:field="ssoMethodLabel" text="{constants.ssoMethod}" addStyleNames="{style.sectionLabel} {style.floatLeft} {style.fullWidth}" />
                        <g:FlowPanel>
                            <ge:EntityModelRadioButtonEditor ui:field="ssoMethodNone" label="{constants.none}"/>
                            <ge:EntityModelRadioButtonEditor ui:field="ssoMethodGuestAgent" label="{constants.guestAgent}"/>
                        </g:FlowPanel>
                        <d:AdvancedParametersExpander ui:field="expander"/>
                        <g:FlowPanel ui:field="expanderContent" addStyleNames="{style.expanderContent}">
                            <g:Label addStyleNames="{style.warningLabel}" text="{constants.advancedOptionsLabel}" />
                            <ge:EntityModelCheckBoxEditor ui:field="allowConsoleReconnectEditor" addStyleNames="{style.checkboxWithLongLabel}" label="{constants.allowConsoleReconnect}" />
                        </g:FlowPanel>

                        <ge:EntityModelCheckBoxEditor ui:field="isSoundcardEnabledEditor" addStyleNames="{style.checkboxWithLongLabel}" label="{constants.soundcardEnabled}" />
                        <ge:EntityModelCheckBoxEditor ui:field="isConsoleDeviceEnabledEditor" addStyleNames="{style.checkboxWithLongLabel}" label="{constants.consoleDeviceEnabled}" />

                        <w:EntityModelWidgetWithInfo ui:field="spiceProxyEnabledCheckboxWithInfoIcon" />
                        <ge:StringEntityModelTextBoxEditor ui:field="spiceProxyEditor" label="{constants.overriddenSpiceProxyAddress}" />

                        <ge:EntityModelCheckBoxEditor ui:field="spiceFileTransferEnabledEditor" addStyleNames="{style.checkboxWithLongLabel}" label="{constants.spiceFileTransferEnabled}" />
                        <ge:EntityModelCheckBoxEditor ui:field="spiceCopyPasteEnabledEditor" addStyleNames="{style.checkboxWithLongLabel}" label="{constants.spiceCopyPasteEnabled}" />
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="hostTab" label="{constants.hostVmPopup}">
                <t:content>
                    <g:FlowPanel>
                    <g:FlowPanel ui:field="startRunningOnPanel">
                        <g:Label addStyleNames="{style.slimSectionLabel}" text="{constants.runOnVmPopup}" />
                        <g:VerticalPanel verticalAlignment='ALIGN_MIDDLE'>
                            <ge:EntityModelRadioButtonEditor ui:field="isAutoAssignEditor" label="{constants.anyHostInClusterVmPopup}" />
                            <g:HorizontalPanel verticalAlignment='ALIGN_TOP'>
                                <g:HTMLPanel addStyleNames="avw_contentWidgetContainer_pfly_fix">
                                    <g:RadioButton ui:field="specificHost" addStyleNames="{style.radioButtonSpecificHost}" text="{constants.specificVmPopup}"/>
                                </g:HTMLPanel>
                                <e:ListModelMultipleSelectListBoxEditor ui:field="defaultHostEditor" addStyleNames="{style.hostSelector}"/>
                            </g:HorizontalPanel>
                        </g:VerticalPanel>
                    </g:FlowPanel>
                        <g:Label addStyleNames="{style.slimSectionLabel}" text="{constants.runMigrationOptionsVmPopup}" />
                        <g:VerticalPanel width="100%" addStyleNames="{style.hostRunMigrationOptions}">
                            <g:HorizontalPanel>
                                <ge:EntityModelDetachableWidget ui:field="migrationModeEditorWithDetachable" addStyleNames="{style.migrationSelect}" contentWidgetContainerStyle="{style.migrationModeContentWidgetEditor}" />
                                <d:InfoIcon ui:field="migrationSelectInfoIcon" addStyleNames="{style.migrationSelectInfoIcon} avmpw_infoIcon_pfly_fix" />
                            </g:HorizontalPanel>
                             <g:FlowPanel addStyleNames="{style.migrationDowntimePanel}">
                               <ge:EntityModelDetachableWidget ui:field="overrideMigrationDowntimeEditorWithDetachable" addStyleNames="{style.overrideMigrationDowntime} avmpw_overrideMigrationDowntime_pfly_fix" contentWidgetContainerStyle="{style.overrideMigrationDowntimeContentEditor}" />
                               <l:EnableableFormLabel ui:field="overrideMigrationDowntimeLabel" text="{constants.overrideMigrationDowntimeLabel}" addStyleNames="{style.migrationDowntimeLabel} avmpw_migrationDowntimeLabel_pfly_fix" />
                               <d:InfoIcon ui:field="migrationDowntimeInfoIcon" addStyleNames="{style.migrationDowntimeInfoIcon} avmpw_infoIcon_pfly_fix" />
                               <ge:IntegerEntityModelTextBoxOnlyEditor ui:field="migrationDowntimeEditor" addStyleNames="{style.migrationDowntime}" />
                             </g:FlowPanel>
                             <e:ListModelListBoxEditor ui:field="autoConvergeEditor" label="{constants.autoConvergeLabel}" addStyleNames="{style.listbox}" />
                             <e:ListModelListBoxEditor ui:field="migrateCompressedEditor" label="{constants.migrateCompressedLabel}" addStyleNames="{style.listbox}" />
                             <ge:EntityModelCheckBoxEditor ui:field="hostCpuEditor" addStyleNames="{style.checkbox}" label="{constants.passThroughHostCpu}"/>
                             <g:FlowPanel ui:field="numaPanel">
                                 <d:InfoIcon ui:field="numaInfoIcon" addStyleNames="{style.labelToCoupleCoupleLeft} avmpw_infoIcon_pfly_fix"/>
                                 <g:Label addStyleNames="{style.slimSectionLabel}" text="{constants.numaSectionLabel}" />
                                 <ge:IntegerEntityModelTextBoxEditor ui:field="numaNodeCount" label="{constants.numaNodeCountLabel}" />
                                 <e:ListModelListBoxEditor ui:field="numaTuneMode" label="{constants.numaTunaModeLabel}" />
                                 <w:UiCommandButton ui:field="numaSupportButton" label="{constants.numaSupportButtonLabel}" />
                             </g:FlowPanel>
                        </g:VerticalPanel>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="highAvailabilityTab" label="{constants.highAvailVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <ge:EntityModelDetachableWidget ui:field="isHighlyAvailableEditorWithDetachable" addStyleNames="{style.checkbox}" />
                            <ge:EntityModelCheckBoxEditor ui:field="isHighlyAvailableEditor" label="{constants.highlyAvailableVmPopup}" />
                        </g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <ge:DetachableLabel ui:field="priorityLabelWithDetachable" labelStyleName="{style.sectionLabel}">
                                <ge:decorated>
                                    <g:Label text="{constants.priorForRunMigrationQueueVmPopup}" />
                                </ge:decorated>
                            </ge:DetachableLabel>
                            <e:ListModelListBoxEditor ui:field="priorityEditor" label="{constants.priorityVm}"/>

                        </g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}" ui:field="watchdogPanel">
                            <g:Label text="{constants.watchdog}" addStyleNames="{style.sectionLabel}"/>
                            <e:ListModelListBoxEditor ui:field="watchdogModelEditor" label="{constants.watchdogModel}" />
                            <e:ListModelListBoxEditor ui:field="watchdogActionEditor" label="{constants.watchdogAction}" />
                        </g:FlowPanel>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="resourceAllocationTab" label="{constants.resourceAllocVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanelTight}" ui:field="cpuAllocationPanel" >
                            <g:Label text="{constants.cpuAllocVmPopup}" addStyleNames="{style.sectionLabel}" />
                            <g:FlowPanel addStyleNames="{style.labelToCouple}">
                                <e:ListModelListBoxEditor ui:field="cpuProfilesEditor" label="{constants.cpuProfileLabel}" />
                                <g:FlowPanel ui:field="cpuSharesPanel" addStyleNames="{style.labelToCoupleCouple}">
                                    <g:Label ui:field="cpuSharesEditor" text="{constants.cpuShares}" addStyleNames="{style.labelToCoupleLabel}"/>
                                    <e:ListModelListBoxOnlyEditor ui:field="cpuSharesAmountSelectionEditor" addStyleNames="{style.labelToCoupleCoupleLeft}" contentWidgetContainerStyleName="{style.cpuSahresValueListBox}" />
                                    <ge:IntegerEntityModelTextBoxOnlyEditor ui:field="cpuSharesAmountEditor" addStyleNames="{style.labelToCoupleCoupleRight}" contentWidgetContainerStyleName="avmpw_cpuSahresValueTextBox_pfly_fix" />
                                </g:FlowPanel>
                            </g:FlowPanel>

                            <g:FlowPanel ui:field="cpuPinningPanel" addStyleNames="{style.labelToCouple}">
                                <g:Label text="{constants.cpuPinningLabel}" addStyleNames="{style.labelToCoupleLabel}"/>
                                <g:FlowPanel addStyleNames="{style.labelToCoupleCouple}">
                                    <d:InfoIcon ui:field="cpuPinningInfo" addStyleNames="{style.labelToCoupleCoupleLeft} avmpw_infoIcon_pfly_fix"/>
                                    <ge:StringEntityModelTextBoxOnlyEditor ui:field="cpuPinning" addStyleNames="{style.labelToCoupleCoupleRight}" contentWidgetContainerStyleName="{style.cpuPinningTextBox} avmpw_cpuPinningTextBox_pfly_fix" label="{constants.cpuPinningLabel}"/>
                                </g:FlowPanel>
                            </g:FlowPanel>

                        </g:FlowPanel>
                        <g:FlowPanel ui:field="memAllocationPanel" addStyleNames="{style.sectionPanelTight}">
                            <ge:DetachableLabel ui:field="memAllocationLabel" labelStyleName="{style.sectionLabel}">
                                <ge:decorated>
                                    <g:Label text="{constants.memAllocVmPopup}" />
                                </ge:decorated>
                            </ge:DetachableLabel>

                            <ge:EntityModelTextBoxEditor ui:field="minAllocatedMemoryEditor" label="{constants.physMemGuarVmPopup}" />
                            <ge:EntityModelCheckBoxEditor addStyleNames="{style.checkbox}" ui:field="isMemoryBalloonDeviceEnabled" label="{constants.memoryBalloonDeviceEnabled}"/>
                        </g:FlowPanel>

                        <g:FlowPanel ui:field="ioThreadsPanel" addStyleNames="{style.sectionPanelTight}">
                            <ge:DetachableLabel ui:field="ioThreadsLabel" labelStyleName="{style.sectionLabel}">
                                <ge:decorated>
                                    <g:Label text="{constants.ioThreadsVmPopup}" />
                                </ge:decorated>
                            </ge:DetachableLabel>

                            <ge:EntityModelCheckBoxEditor addStyleNames="{style.checkbox}" ui:field="isIoThreadsEnabled" label="{constants.ioThreadsEnabled}"/>
                            <ge:IntegerEntityModelTextBoxEditor ui:field="numOfIoThreadsEditor" label="{constants.numOfIoThreadsVmPopup}" />
                        </g:FlowPanel>

                        <g:FlowPanel ui:field="storageAllocationPanel" addStyleNames="{style.sectionPanelTight}">
                            <g:HorizontalPanel>
                                <g:Label addStyleNames="{style.sectionLabel}" text="{constants.storageAllocVmPopup}" />
                                <g:Label addStyleNames="{style.sectionComment}" text="{constants.availOnlyTemplSelectedVmPopup}" />
                            </g:HorizontalPanel>
                            <g:HorizontalPanel ui:field="provisionSelectionPanel">
                                <e:ListModelListBoxEditor ui:field="provisioningEditor" addStyleNames="{style.provisioningEditor}" label="{constants.templateProvisVmPopup}" />
                                <g:VerticalPanel>
                                    <ge:EntityModelRadioButtonEditor ui:field="provisioningThinEditor" label="{constants.thinVmPopup}"/>
                                    <ge:EntityModelRadioButtonEditor ui:field="provisioningCloneEditor" label="{constants.cloneVmPopup}"/>
                                </g:VerticalPanel>
                            </g:HorizontalPanel>
                        </g:FlowPanel>
                        <g:FlowPanel>
                            <g:HorizontalPanel addStyleNames="{style.floatLeft}">
                                <ge:EntityModelCheckBoxEditor ui:field="isVirtioScsiEnabled" addStyleNames="{style.checkbox}" label="{constants.isVirtioScsiEnabled}" />
                                <d:InfoIcon ui:field="isVirtioScsiEnabledInfoIcon" addStyleNames="{style.infoIcon}" visible="false"/>
                            </g:HorizontalPanel>
                        </g:FlowPanel>

                        <g:FlowPanel ui:field="disksAllocationPanel" addStyleNames="{style.sectionPanelTight}">
                            <g:HorizontalPanel>
                                <g:Label addStyleNames="{style.sectionLabel}" text="{constants.disksAllocation}" />
                            </g:HorizontalPanel>
                            <g:FlowPanel ui:field="disksPanel">
                                <s:DisksAllocationView ui:field="disksAllocationView" listHeight="170px" listWidth="560px" showVolumeType="true" addStyleNames="{style.disksPanel}" />
                            </g:FlowPanel>
                        </g:FlowPanel>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="bootOptionsTab" label="{constants.bootOptionsVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <g:FlowPanel addStyleNames="{style.sectionPanel}">
                            <g:Label addStyleNames="{style.sectionLabel}" text="{constants.bootSequenceVmPopup}" />
                            <e:ListModelListBoxEditor ui:field="firstBootDeviceEditor" label="{constants.firstDeviceVmPopup}" />
                            <e:ListModelListBoxEditor ui:field="secondBootDeviceEditor" label="{constants.secondDeviceVmPopup}" />
                            <g:HorizontalPanel ui:field="attachCdPanel" addStyleNames="{style.attachCdPanel}" verticalAlignment="ALIGN_MIDDLE">
                                <ge:EntityModelCheckBoxEditor label="{constants.attachCdVmPopup}" ui:field="cdAttachedEditor" />
                                <e:ListModelListBoxEditor ui:field="cdImageEditor" addStyleNames="avmpw_cdImageEditor_pfly_fix" />
                                <g:PushButton ui:field="refreshButton" addStyleNames="{style.refreshButton} avmpw_refreshButton_pfly_fix">
                                    <g:upFace image='{resources.refreshButtonImage}' />
                                </g:PushButton>
                            </g:HorizontalPanel>
                            <ge:EntityModelCheckBoxEditor ui:field="bootMenuEnabledEditor" label="{constants.bootMenuEnabled}" addStyleNames="{style.checkbox}" />
                        </g:FlowPanel>
                        <g:FlowPanel ui:field="linuxBootOptionsPanel" addStyleNames="{style.sectionPanel}" visible="false">
                            <g:Label addStyleNames="{style.sectionLabel}" text="{constants.linuxBootOptionsVmPopup}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="kernel_pathEditor" label="{constants.kernelPathVmPopup}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="initrd_pathEditor" label="{constants.initrdPathVmPopup}" />
                            <ge:StringEntityModelTextBoxEditor ui:field="kernel_parametersEditor" label="{constants.kernelParamsVmPopup}" />
                        </g:FlowPanel>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="rngDeviceTab" label="{constants.rngDeviceTab}">
                <t:content>
                    <g:FlowPanel addStyleNames="{style.sectionPanel}">
                        <w:EntityModelWidgetWithInfo ui:field="isRngEnabledCheckboxWithInfoIcon" addStyleNames="{style.checkbox}" />
                        <ge:EntityModelCheckBoxOnlyEditor ui:field="isRngEnabledEditor" label="{constants.rngDevEnabled}" />
                        <g:FlowPanel ui:field="rngPanel">
                            <ge:IntegerEntityModelTextBoxEditor ui:field="rngPeriodEditor" label="{constants.rngPeriod}"/>
                            <ge:IntegerEntityModelTextBoxEditor ui:field="rngBytesEditor" label="{constants.rngBytes}"/>
                            <g:Label ui:field="rngSourceLabel" text="{constants.deviceSource}" addStyleNames="{style.sectionLabel}"  />
                            <ge:EntityModelRadioButtonEditor ui:field="rngSourceRandom" label="{constants.rngSourceRandom}"/>
                            <ge:EntityModelRadioButtonEditor ui:field="rngSourceHwrng" label="{constants.rngSourceHwrng}"/>
                        </g:FlowPanel>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="customPropertiesTab" label="{constants.customPropsVmPopup}">
                <t:content>
                    <g:FlowPanel>
                        <k:KeyValueWidget ui:field="customPropertiesSheetEditor"/>
                    </g:FlowPanel>
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="iconTab" label="{constants.iconTabVmPopup}">
                <t:content>
                    <e:IconEditorWidget ui:field="iconEditorWidget" />
                </t:content>
            </t:DialogTab>
        </t:tab>
        <t:tab>
            <t:DialogTab ui:field="foremanTab" label="{constants.foremanLabel}">
                <t:content>
                    <b:Container addStyleNames="{style.fullWidth}">
                        <b:Row>
                            <b:Column size="LG_12">
                                <e:ListModelListBoxEditor ui:field="providersEditor" labelColSize="LG_5" widgetColSize="LG_7" usePatternFly="true"/>
                            </b:Column>
                        </b:Row>
                    </b:Container>
                </t:content>
            </t:DialogTab>
        </t:tab>
    </t:DialogTabPanel>

</ui:UiBinder>
